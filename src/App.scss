:root {
  --themeHue: 180;
  --bgc: hsl(var(--themeHue), 45%, 20%);
  --glow: hsl(var(--themeHue), 75%, 50%);
}

$breakpoints: (
  phone: 575px,
  pad: 768px,
  desktop: 1200px,
);

@mixin response($device, $orientation: null) {
  @if $orientation {
    @media (min-width: map-get($breakpoints, $device )) and (orientation: #{$orientation}) {
      @content;
    }
  } @else {
    @media (min-width: map-get($breakpoints, $device )) {
      @content;
    }
  }
}

html,
body {
  width: 100%;
  height: 100%;
  position: relative;
  background: #000000;
  background: radial-gradient(ellipse at center, var(--bgc) 20%, #000000 100%);
  color: #ddd;
  user-select: none;
}

button:focus {
  outline: 0;
}

.glowText {
  color: white;
  text-shadow: 0 0 5px #ddd, 0 0 8px var(--glow), 0 0 16px var(--glow);
  transition: text-shadow 1s ease-in-out;
}

.App {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-direction: column;

  @media (orientation: landscape) {
    flex-direction: row;
  }
}

.clockDiv {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: nowrap;
}

.clockRight {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
}

#hrmm {
  font-size: 32vw;
  font-weight: lighter;

  @media (orientation: landscape) {
    font-size: 28vw;
  }
}

#ampm,
#seconds {
  font-size: 5vw;
  line-height: 11vh;
  @media (orientation: landscape) {
    font-size: 4vw;
    line-height: 16vw;
  }
}

.weatherDiv {
  text-align: center;
  margin: 0 10px;
  p {
    margin: 1.2vmin;
  }
}

.weatherInfo {
  font-size: 3vmin;
  .location {
    font-size: smaller;
  }
  .weather {
    font-size: larger;
  }
}

.weatherDetails {
  font-size: 4vmin;
  .temp {
    font-size: 12vmin;
    font-weight: lighter;
  }
}

.actionButtons {
  display: flex;
  align-items: center;
  justify-content: space-around;
  margin: 20px 0;

  button {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    box-shadow: 0 0 10px var(--glow);
    margin: 0 8px;

    @include response(pad) {
      width: 48px;
      height: 48px;
      margin: 6px;
      padding: 6px;
      border-radius: 50%;
    }

    &#refreshBtn,
    &#hourlyWeatherBtn {
      background-color: #bbb;
      outline: none;
      border: none;
      padding: 8px;
    }
    &#colorPickerBtn {
      border: 2px solid #ddd;
      background-color: var(--bgc);
    }
  }
}

.refreshIcon {
  @include response(pad) {
    width: 36px;
    height: 36px;
  }
}

.spin {
  animation-name: spin;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.overlay {
  position: absolute;
  z-index: 98;
  left: 0;
  height: 100%;
  top: 0;
  width: 100%;
}

@mixin modalBase {
  z-index: 100;
  position: absolute;
  border-radius: 0.75rem;
  box-shadow: 0 0 2px #ddd, 0 0 10px var(--glow);
  background-color: rgba(0, 0, 0, 0.9);
  transition: all 0.2s ease-out;
  visibility: hidden;
  opacity: 0;
  transform: translateY(-20px) scaleY(0.6);
  &.show {
    visibility: visible;
    opacity: 1;
    transform: translateY(0) scaleY(1);
  }
}

#colorPicker {
  @include modalBase();
  right: 20px;
  padding: 10px;
  margin: 20px;
  max-width: 280px;
}

#hourlyWeatherModal {
  @include modalBase();
  bottom: 0;
  left: 0;
  width: 80vw;
  height: 90vh;
  max-height: 360px;
  margin: 5vh 10vw;
  @include response(pad) {
    max-height: inherit;
    width: 80vw;
    height: 60vh;
    margin: 20vh 10vw;
  }
}

.themeBtn {
  border-radius: 50%;
  width: 32px;
  height: 32px;
  margin: 5px;
  border: 2px solid #ddd;
}

.weatherIcon {
  background-color: rgb(135, 154, 179);
  border-radius: 50%;
  height: 14vh;
}

footer {
  position: absolute;
  text-align: center;
  bottom: 0;
  color: #666;
  font-size: 9pt;
  @include response(desktop) {
    padding: 2rem;
  }
  a {
    color: #3fc7d1;
    text-decoration: none;
  }
  .version {
    color: rgba(255, 255, 255, 0.25);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(-360deg);
  }
}
